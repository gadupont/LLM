import replicate
import requests
import json
import os
from dotenv import load_dotenv



# === 2. DÃ‰FINITION DU PROMPT STRUCTURÃ‰ POUR LE FORMAT DE VISITE CLINIQUE ===
prompt = (
    "Voici un tableau extrait dâ€™un protocole clinique. Extrait et convertis les donnÃ©es en un objet JSON "
    "structurÃ© reprÃ©sentant les visites de l'Ã©tude. Chaque entrÃ©e du tableau doit Ãªtre convertie dans ce format :\n\n"
    "{\n"
    "  \"id\": <numÃ©ro entier unique et incrÃ©mentÃ© Ã  partir de 1>,\n"
    "  \"code\": <nom de la visite comme D1, D8, Screening, etc>,\n"
    "  \"description\": <texte court rÃ©sumant la visite avec le jour et sa tolÃ©rance>,\n"
    "  \"order\": <mÃªme valeur que id>,\n"
    "  \"is_scheduled\": true si elle est planifiÃ©e, false si non,\n"
    "  \"anchor\": null si c'est la premiÃ¨re visite (Screening), sinon l'id de la visite de rÃ©fÃ©rence,\n"
    "  \"expected_days\": <nombre de jours depuis la visite Screening>,\n"
    "  \"window_before\": <jours avant>,\n"
    "  \"window_after\": <jours aprÃ¨s>\n"
    "}\n\n"
    "Toutes les visites doivent Ãªtre listÃ©es dans une seule clÃ© 'visits'.\n"
    "RÃ©ponds uniquement avec un objet JSON valide, sans aucun texte explicatif ou commentaire.\n"
)

# === 3. IMAGE Ã€ TRAITER ===
image_url = "https://raw.githubusercontent.com/gadupont/LLM/094bbfb70cb3e9130c0a16bb4d45a57ecffd84b5/example_de_protocole/ex1/schedule.png"



# === 4. APPEL Ã€ LLAVA VIA REPLICATE ===
print("ðŸ¤– Envoi de la requÃªte Ã  LLaVA...")
output = replicate.run(
    "yorickvp/llava-v1.6-mistral-7b:19be067b589d0c46689ffa7cc3ff321447a441986a7694c01225973c2eafc874",
    input={
        "image": image_url,
        "prompt": prompt,
        
    }
)

# === 5. RÃ‰CUPÃ‰RATION & SAUVEGARDE DU RÃ‰SULTAT ===
full_output = ""
for item in output:
    full_output += str(item)

output_path = "./llava/output.json"
os.makedirs(os.path.dirname(output_path), exist_ok=True)
with open(output_path, "w") as f:
    f.write(full_output)

print(f"âœ… RÃ©sultat sauvegardÃ© dans : {output_path}")
